{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://claire-ai-assistant/webpack/runtime/chunk loaded","webpack://claire-ai-assistant/webpack/runtime/create fake namespace object","webpack://claire-ai-assistant/webpack/runtime/load script","webpack://claire-ai-assistant/./src/utils/contentAnalysis.ts","webpack://claire-ai-assistant/./src/api/lmStudioApi.ts","webpack://claire-ai-assistant/./src/api/ollamaApi.ts","webpack://claire-ai-assistant/./src/api/ollamaService.ts","webpack://claire-ai-assistant/./src/components/Chat.tsx","webpack://claire-ai-assistant/./src/popup.tsx","webpack://claire-ai-assistant/webpack/bootstrap","webpack://claire-ai-assistant/webpack/runtime/compat get default export","webpack://claire-ai-assistant/webpack/runtime/define property getters","webpack://claire-ai-assistant/webpack/runtime/ensure chunk","webpack://claire-ai-assistant/webpack/runtime/get javascript chunk filename","webpack://claire-ai-assistant/webpack/runtime/global","webpack://claire-ai-assistant/webpack/runtime/hasOwnProperty shorthand","webpack://claire-ai-assistant/webpack/runtime/make namespace object","webpack://claire-ai-assistant/webpack/runtime/publicPath","webpack://claire-ai-assistant/webpack/runtime/jsonp chunk loading","webpack://claire-ai-assistant/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"claire-ai-assistant:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export const detectContentType = (url, content) => {\n    if (url.includes('arxiv.org') || url.includes('doi.org') || url.includes('.edu')) {\n        return 'academic';\n    }\n    if (url.includes('docs.') || content.toLowerCase().includes('api') || content.toLowerCase().includes('documentation')) {\n        return 'documentation';\n    }\n    if (url.includes('news.') || url.includes('/news/')) {\n        return 'news';\n    }\n    return 'blog';\n};\nexport const detectAudience = (content) => {\n    const technicalTerms = ['algorithm', 'implementation', 'framework', 'methodology'];\n    const scientificTerms = ['hypothesis', 'experiment', 'analysis', 'study'];\n    const technicalCount = technicalTerms.filter(term => content.toLowerCase().includes(term.toLowerCase())).length;\n    const scientificCount = scientificTerms.filter(term => content.toLowerCase().includes(term.toLowerCase())).length;\n    if (technicalCount > 2)\n        return 'Technical Professionals';\n    if (scientificCount > 2)\n        return 'Researchers/Academics';\n    return 'General Audience';\n};\nexport const detectComplexity = (content) => {\n    const complexityIndicators = {\n        advanced: ['furthermore', 'consequently', 'methodology', 'theoretical'],\n        intermediate: ['however', 'therefore', 'additionally', 'moreover'],\n        beginner: ['basic', 'introduction', 'simple', 'easy']\n    };\n    const counts = {\n        advanced: 0,\n        intermediate: 0,\n        beginner: 0\n    };\n    Object.entries(complexityIndicators).forEach(([level, terms]) => {\n        counts[level] = terms.filter(term => content.toLowerCase().includes(term.toLowerCase())).length;\n    });\n    if (counts.advanced > 2)\n        return 'advanced';\n    if (counts.intermediate > 2)\n        return 'intermediate';\n    return 'beginner';\n};\nexport const extractLearningObjectives = (content) => {\n    const objectives = [];\n    const lines = content.split('\\n');\n    let inObjectivesSection = false;\n    for (const line of lines) {\n        const lowerLine = line.toLowerCase();\n        if (lowerLine.includes('learning objective') || lowerLine.includes('you will learn')) {\n            inObjectivesSection = true;\n            continue;\n        }\n        if (inObjectivesSection) {\n            if (line.trim().length === 0) {\n                break;\n            }\n            if (line.trim().startsWith('•') || line.trim().startsWith('-')) {\n                objectives.push(line.trim().substring(1).trim());\n            }\n        }\n    }\n    return objectives.length > 0 ? objectives : undefined;\n};\nexport const extractKeyTerms = (content) => {\n    const terms = [];\n    const lines = content.split('\\n');\n    let inTermsSection = false;\n    for (const line of lines) {\n        const lowerLine = line.toLowerCase();\n        if (lowerLine.includes('key terms') || lowerLine.includes('key concepts') || lowerLine.includes('terminology')) {\n            inTermsSection = true;\n            continue;\n        }\n        if (inTermsSection) {\n            if (line.trim().length === 0) {\n                break;\n            }\n            if (line.trim().startsWith('•') || line.trim().startsWith('-')) {\n                terms.push(line.trim().substring(1).trim());\n            }\n        }\n    }\n    return terms.length > 0 ? terms : undefined;\n};\nexport const extractEquations = (content) => {\n    const equations = [];\n    const mathPattern = /\\$([^$]+)\\$/g;\n    const matches = content.match(mathPattern);\n    if (matches) {\n        equations.push(...matches.map(match => match.slice(1, -1)));\n    }\n    return equations.length > 0 ? equations : undefined;\n};\nexport const generateIntuition = (content) => {\n    const lines = content.split('\\n');\n    for (const line of lines) {\n        const lowerLine = line.toLowerCase();\n        if (lowerLine.includes('intuition') || lowerLine.includes('intuitive') || lowerLine.includes('simply put')) {\n            return line.trim();\n        }\n    }\n    return undefined;\n};\nexport const analyzeContent = (rawData) => {\n    const { url, title, metaDescription, mainContent, headings = [] } = rawData;\n    const content = mainContent || '';\n    return {\n        summary: `${title}\\n${metaDescription || ''}`,\n        mainPoints: headings\n            .filter((h) => h.level === 'h1' || h.level === 'h2')\n            .map((h) => h.text),\n        learningObjectives: extractLearningObjectives(content),\n        keyTerms: extractKeyTerms(content),\n        equations: extractEquations(content),\n        intuition: generateIntuition(content),\n        context: {\n            type: detectContentType(url, content),\n            audience: detectAudience(content),\n            complexity: detectComplexity(content)\n        }\n    };\n};\n","import axios from \"axios\";\nexport class LMStudioAPI {\n    constructor(baseUrl = \"http://localhost:6223\", defaultModel = \"google/gemma-3-4b\") {\n        this.tools = new Map();\n        this.agenticState = null;\n        this.baseUrl = baseUrl;\n        this.defaultModel = defaultModel;\n        this.initializeDefaultTools();\n    }\n    setBaseUrl(url) {\n        // Remove trailing slash if present\n        this.baseUrl = url.replace(/\\/$/, \"\");\n        // Remove /v1 if it's at the end since we add it in chatCompletion\n        this.baseUrl = this.baseUrl.replace(/\\/v1$/, \"\");\n    }\n    setDefaultModel(model) {\n        this.defaultModel = model;\n    }\n    /**\n     * Get the current default model\n     */\n    getDefaultModel() {\n        return this.defaultModel;\n    }\n    /**\n     * Get the current base URL\n     */\n    getBaseUrl() {\n        return this.baseUrl;\n    }\n    // Initialize default tools\n    initializeDefaultTools() {\n        this.registerTool({\n            name: \"search_wikipedia\",\n            description: \"Search Wikipedia for information about a topic\",\n            parameters: [\n                {\n                    name: \"query\",\n                    type: \"string\",\n                    description: \"The topic to search for on Wikipedia\",\n                    required: true,\n                },\n            ],\n            handler: async (params) => {\n                const { searchWikipedia } = await import(\"../tools/wikiSearch\");\n                const result = await searchWikipedia(params.query);\n                if (result.success && result.data) {\n                    return {\n                        title: result.data.title,\n                        summary: result.data.summary,\n                        url: result.data.url,\n                    };\n                }\n                throw new Error(result.error);\n            },\n            category: \"research\",\n        });\n        this.registerTool({\n            name: \"analyze_text\",\n            description: \"Analyze text for sentiment, keywords, readability, or structure\",\n            parameters: [\n                {\n                    name: \"text\",\n                    type: \"string\",\n                    description: \"Text to analyze\",\n                    required: true,\n                },\n                {\n                    name: \"type\",\n                    type: \"string\",\n                    description: \"Analysis type: sentiment, keywords, readability, structure\",\n                    required: true,\n                },\n            ],\n            handler: async (params) => {\n                return this.performTextAnalysis(params.text, params.type);\n            },\n            category: \"analysis\",\n        });\n        this.registerTool({\n            name: \"summarize_content\",\n            description: \"Create summaries of long content with different focus areas\",\n            parameters: [\n                {\n                    name: \"content\",\n                    type: \"string\",\n                    description: \"Content to summarize\",\n                    required: true,\n                },\n                {\n                    name: \"focus\",\n                    type: \"string\",\n                    description: \"Summary focus: key_points, technical, executive, detailed\",\n                    required: false,\n                },\n                {\n                    name: \"length\",\n                    type: \"string\",\n                    description: \"Summary length: brief, medium, detailed\",\n                    required: false,\n                },\n            ],\n            handler: async (params) => {\n                return this.createSummary(params.content, params.focus || \"key_points\", params.length || \"medium\");\n            },\n            category: \"content\",\n        });\n        this.registerTool({\n            name: \"plan_task\",\n            description: \"Break down complex tasks into manageable steps\",\n            parameters: [\n                {\n                    name: \"task\",\n                    type: \"string\",\n                    description: \"The complex task to plan\",\n                    required: true,\n                },\n                {\n                    name: \"context\",\n                    type: \"string\",\n                    description: \"Additional context or constraints\",\n                    required: false,\n                },\n            ],\n            handler: async (params) => {\n                return this.createTaskPlan(params.task, params.context);\n            },\n            category: \"planning\",\n        });\n    }\n    // Tool registration and management\n    registerTool(tool) {\n        this.tools.set(tool.name, tool);\n    }\n    unregisterTool(name) {\n        return this.tools.delete(name);\n    }\n    getAvailableTools(category) {\n        const tools = Array.from(this.tools.values());\n        return category\n            ? tools.filter((tool) => tool.category === category)\n            : tools;\n    }\n    async processToolCall(toolCall) {\n        const tool = this.tools.get(toolCall.name);\n        if (!tool) {\n            return `[TOOL_ERROR]Unknown tool: ${toolCall.name}. Available tools: ${Array.from(this.tools.keys()).join(\", \")}[/TOOL_ERROR]`;\n        }\n        try {\n            const result = await tool.handler(toolCall.parameters);\n            return `[TOOL_RESULT:${toolCall.name}]${JSON.stringify(result)}[/TOOL_RESULT]`;\n        }\n        catch (error) {\n            return `[TOOL_ERROR:${toolCall.name}]${error}[/TOOL_ERROR]`;\n        }\n    }\n    async chatCompletion(messages, model = this.defaultModel, temperature = 0.7, maxTokens = 100000) {\n        console.log(`LMStudioAPI: calling chatCompletion with baseUrl=${this.baseUrl}, model=${model}`);\n        try {\n            // Extract tool calls from the last message using enhanced detection\n            const lastMessage = messages[messages.length - 1];\n            const toolCalls = this.detectToolRequests(lastMessage.content);\n            // Process tool calls if any\n            if (toolCalls.length > 0) {\n                const results = await this.processToolChain(toolCalls);\n                // Add tool results to messages\n                messages = [\n                    ...messages,\n                    {\n                        role: \"system\",\n                        content: `Tool results: ${results.join(\"\\n\")}`,\n                    },\n                ];\n            }\n            // make API call\n            const response = await axios.post(`${this.baseUrl}/v1/chat/completions`, {\n                messages,\n                model,\n                temperature,\n                max_tokens: maxTokens,\n                stream: false,\n            }, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n            // Clean up response content by removing XML-like tags\n            let content = response.data.choices[0].message.content;\n            content = content.replace(/<think>.*?<\\/think>/gs, \"\");\n            content = content.replace(/<\\/?think>/g, \"\");\n            content = content.trim();\n            return content;\n        }\n        catch (error) {\n            console.error(\"Error calling LM Studio API:\", error);\n            throw error;\n        }\n    }\n    // Add fallback for when local server is unavailable\n    async testConnection() {\n        try {\n            const response = await axios.get(`${this.baseUrl}/v1/models`, {\n                timeout: 5000,\n            });\n            return response.status === 200;\n        }\n        catch (error) {\n            console.warn(\"Local AI server not available:\", error);\n            return false;\n        }\n    }\n    // Graceful fallback when server unavailable\n    async chatCompletionWithFallback(messages, model = this.defaultModel, temperature = 0.7, maxTokens = 100000) {\n        const isConnected = await this.testConnection();\n        if (!isConnected) {\n            return \"⚠️ Claire is currently offline. Please check that your local AI server (LM Studio) is running, or configure a cloud AI provider in settings.\";\n        }\n        return this.chatCompletion(messages, model, temperature, maxTokens);\n    }\n    // get protocols for different assistant modes\n    getProtocols(mode) {\n        const protocols = {\n            general: {\n                directive: \"You are Claire, an AI assistant that helps with a variety of tasks.\",\n                context: \"You are helpful, friendly, witty, and engaging.\",\n                rationale: \"Your responses should be short, to the point, and concise.\",\n                examples: [\n                    \"What is the weather like today?\",\n                    \"Can you help me with my homework?\",\n                    \"Tell me a joke.\",\n                ],\n                constraints: [\n                    \"Be polite and respectful.\",\n                    \"Avoid sensitive topics.\",\n                    \"Do not provide medical or legal advice.\",\n                ],\n            },\n            writing: {\n                directive: \"You are Claire, a writing assistant.\",\n                context: \"You help users improve their writing by offering suggestions, edits, and feedback.\",\n                rationale: \"Focus on clarity, conciseness, and impact.\",\n                examples: [\n                    \"Write a short story about a dog named Charlie.\",\n                    'Rewrite this paragraph to make it more engaging: \"The quick brown fox jumps over the lazy dog.\"',\n                    'Rewrite this sentence to make it more engaging: \"The quick brown fox jumps over the lazy dog.\"',\n                ],\n                constraints: [\n                    \"Be concise and clear.\",\n                    \"Avoid jargon and unnecessary language. Complex and creative language is welcome.\",\n                    \"Focus on the main idea.\",\n                ],\n            },\n            research: {\n                directive: \"You are Claire, a research assistant.\",\n                context: \"You help users analyze information, find connections, and summarize complex topics.\",\n                rationale: \"Provide well-structured, factual responses.\",\n                examples: [\n                    \"Summarize the main points of this article.\",\n                    \"What are the key findings of this research paper?\",\n                    \"Can you help me find sources for my thesis?\",\n                ],\n                constraints: [\n                    \"Be factual and objective.\",\n                    \"Avoid personal opinions or biases.\",\n                    \"Cite sources when possible.\",\n                ],\n            },\n            coding: {\n                directive: \"You are Claire, a coding assistant.\",\n                context: \"You help users write, debug, and understand code.\",\n                rationale: \"Provide clear explanations and practical examples.\",\n                examples: [\n                    \"Write a Python function to calculate the factorial of a number.\",\n                    \"Explain how a for loop works in Python.\",\n                    \"Can you help me debug this code?\",\n                ],\n                constraints: [\n                    \"Be clear and concise.\",\n                    \"Avoid complex jargon unless necessary.\",\n                    \"Provide examples when possible.\",\n                ],\n            },\n            pdf: {\n                directive: \"You are Claire, a PDF analysis assistant.\",\n                context: \"You help users understand and extract information from PDF documents.\",\n                rationale: \"Provide clear summaries and highlight key points.\",\n                examples: [\n                    \"Summarize this PDF document.\",\n                    \"What are the key findings in this research paper?\",\n                    \"Can you help me extract data from this PDF?\",\n                ],\n                constraints: [\n                    \"Be clear and concise.\",\n                    \"Avoid complex jargon unless necessary.\",\n                    \"Provide examples when possible.\",\n                ],\n            },\n            web: {\n                directive: \"You are Claire, a web page analysis assistant.\",\n                context: \"You help users understand and extract information from web pages.\",\n                rationale: \"Provide clear summaries and highlight key points.\",\n                examples: [\n                    \"Summarize this web page.\",\n                    \"What are the key findings in this research paper?\",\n                    \"Can you help me extract data from this web page?\",\n                ],\n                constraints: [\n                    \"Be clear and concise.\",\n                    \"Avoid complex jargon unless necessary.\",\n                    \"Provide examples when possible.\",\n                ],\n                tools: this.getAvailableTools().map((tool) => ({\n                    name: tool.name,\n                    description: tool.description,\n                    parameters: tool.parameters,\n                })),\n            },\n        };\n        return protocols[mode];\n    }\n    // method to get system prompt for different assistant modes\n    getSystemPrompt(mode) {\n        const basePrompt = this.getProtocols(mode);\n        const availableTools = this.getAvailableTools();\n        const toolInstructions = availableTools.length > 0\n            ? `\n    Available tools:\n    ${availableTools\n                .map((tool) => `\n    - ${tool.name}: ${tool.description}\n      Parameters: ${tool.parameters\n                .map((p) => `${p.name} (${p.type}${p.required ? \", required\" : \"\"})`)\n                .join(\", \")}\n      Usage formats:\n        * [TOOL]{\"name\": \"${tool.name}\", \"parameters\": {...}}[/TOOL]\n        * Use ${tool.name} tool with [query/parameters]\n        * /${tool.name} [query]\n    `)\n                .join(\"\\n\")}\n    \n    You can use these tools naturally in conversation. Just mention what you want to do and I'll use the appropriate tool.\n    `\n            : \"\";\n        const systemPrompts = {\n            general: `You are Claire, an AI assistant that helps with a variety of tasks. You are helpful, friendly, witty, and engaging. Your responses should be short, to the point, and concise. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n            writing: `You are Claire, a writing assistant. You help users improve their writing by offering suggestions, edits, and feedback. Focus on clarity, conciseness, and impact. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n            research: `You are Claire, a research assistant. You help users analyze information, find connections, and summarize complex topics. Provide well-structured, factual responses. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n            coding: `You are Claire, a coding assistant. You help users write, debug, and understand code. Provide clear explanations and practical examples. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n            pdf: `You are Claire, a PDF analysis assistant. You help users understand and extract information from PDF documents. Provide clear summaries and highlight key points. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n            web: `You are Claire, a web page analysis assistant. You help users understand and extract information from web pages. Provide clear summaries and highlight key points. ${toolInstructions} Here are your protocols: ${JSON.stringify(this.getProtocols(mode))}`,\n        };\n        return systemPrompts[mode] || systemPrompts.general;\n    }\n    // Agentic capabilities\n    async executeAgenticTask(userInput, maxTurns = 5) {\n        this.agenticState = {\n            currentTask: userInput,\n            taskSteps: [],\n            completedSteps: [],\n            context: {},\n            maxTurns,\n            currentTurn: 0,\n        };\n        let context = userInput;\n        let finalResponse = \"\";\n        while (this.agenticState.currentTurn < this.agenticState.maxTurns) {\n            const response = await this.chatCompletion([\n                {\n                    role: \"system\",\n                    content: this.getAgenticSystemPrompt(),\n                },\n                {\n                    role: \"user\",\n                    content: context,\n                },\n            ]);\n            // Check if task is complete\n            if (this.isTaskComplete(response)) {\n                finalResponse = response;\n                break;\n            }\n            // Update context for next turn\n            context += `\\n\\nPrevious response: ${response}`;\n            this.agenticState.currentTurn++;\n            // If we've reached max turns, return the last response\n            if (this.agenticState.currentTurn >= this.agenticState.maxTurns) {\n                finalResponse = response;\n            }\n        }\n        this.agenticState = null; // Reset state\n        return finalResponse;\n    }\n    getAgenticSystemPrompt() {\n        return `You are Claire, an agentic AI assistant. You can break down complex tasks and use available tools to complete them step by step.\n\nAvailable tools:\n${Array.from(this.tools.values())\n            .map((tool) => `\n- ${tool.name}: ${tool.description}\n  Parameters: ${tool.parameters\n            .map((p) => `${p.name} (${p.type}${p.required ? \", required\" : \"\"})`)\n            .join(\", \")}\n  Usage formats:\n    * [TOOL]{\"name\": \"${tool.name}\", \"parameters\": {...}}[/TOOL]\n    * Use ${tool.name} tool with [query/parameters]\n    * /${tool.name} [query]\n`)\n            .join(\"\\n\")}\n\nInstructions:\n1. Analyze the task and break it down if complex\n2. Use available tools when needed\n3. Build upon previous results\n4. When you have completed the task, say \"TASK COMPLETE:\" followed by your final answer\n5. Be proactive - suggest additional tools or information that might be helpful`;\n    }\n    isTaskComplete(response) {\n        const completionIndicators = [\n            \"task complete:\",\n            \"analysis complete\",\n            \"here is your final answer\",\n            \"task finished\",\n            \"completed successfully\",\n        ];\n        return completionIndicators.some((indicator) => response.toLowerCase().includes(indicator));\n    }\n    // Dynamic tool suggestion based on user input\n    suggestTools(userInput) {\n        const suggestions = [];\n        const input = userInput.toLowerCase();\n        // Keyword-based tool suggestions\n        const toolKeywords = {\n            search_wikipedia: [\n                \"search\",\n                \"find\",\n                \"look up\",\n                \"research\",\n                \"wikipedia\",\n                \"information about\",\n            ],\n            analyze_text: [\n                \"analyze\",\n                \"sentiment\",\n                \"keywords\",\n                \"readability\",\n                \"analysis\",\n            ],\n            summarize_content: [\n                \"summarize\",\n                \"summary\",\n                \"key points\",\n                \"tldr\",\n                \"brief\",\n            ],\n            plan_task: [\n                \"plan\",\n                \"steps\",\n                \"break down\",\n                \"organize\",\n                \"schedule\",\n                \"task\",\n            ],\n        };\n        for (const [toolName, keywords] of Object.entries(toolKeywords)) {\n            if (keywords.some((keyword) => input.includes(keyword))) {\n                const tool = this.tools.get(toolName);\n                if (tool && !suggestions.includes(tool)) {\n                    suggestions.push(tool);\n                }\n            }\n        }\n        return suggestions;\n    }\n    // Missing method implementations\n    async performTextAnalysis(text, type) {\n        // Simple text analysis implementation\n        switch (type.toLowerCase()) {\n            case 'sentiment':\n                // Basic sentiment analysis (placeholder)\n                const positiveWords = ['good', 'great', 'excellent', 'amazing', 'wonderful', 'fantastic'];\n                const negativeWords = ['bad', 'terrible', 'awful', 'horrible', 'disappointing'];\n                const words = text.toLowerCase().split(/\\s+/);\n                const positive = words.filter(word => positiveWords.includes(word)).length;\n                const negative = words.filter(word => negativeWords.includes(word)).length;\n                return {\n                    sentiment: positive > negative ? 'positive' : negative > positive ? 'negative' : 'neutral',\n                    score: (positive - negative) / words.length,\n                    positiveWords: positive,\n                    negativeWords: negative\n                };\n            case 'keywords':\n                // Extract potential keywords (words longer than 3 characters, not common words)\n                const commonWords = ['the', 'and', 'for', 'are', 'but', 'not', 'you', 'all', 'can', 'had', 'her', 'was', 'one', 'our', 'out', 'day', 'get', 'has', 'him', 'his', 'how', 'man', 'new', 'now', 'old', 'see', 'two', 'way', 'who', 'boy', 'did', 'its', 'let', 'put', 'say', 'she', 'too', 'use'];\n                const keywords = text.toLowerCase()\n                    .replace(/[^\\w\\s]/g, '')\n                    .split(/\\s+/)\n                    .filter(word => word.length > 3 && !commonWords.includes(word))\n                    .reduce((acc, word) => {\n                    acc[word] = (acc[word] || 0) + 1;\n                    return acc;\n                }, {});\n                return {\n                    keywords: Object.entries(keywords)\n                        .sort(([, a], [, b]) => b - a)\n                        .slice(0, 10)\n                        .map(([word, count]) => ({ word, count }))\n                };\n            case 'readability':\n                const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0);\n                const wordsCount = text.split(/\\s+/).length;\n                const avgWordsPerSentence = wordsCount / sentences.length;\n                const avgCharsPerWord = text.replace(/\\s/g, '').length / wordsCount;\n                return {\n                    wordCount: wordsCount,\n                    sentenceCount: sentences.length,\n                    averageWordsPerSentence: Math.round(avgWordsPerSentence * 100) / 100,\n                    averageCharsPerWord: Math.round(avgCharsPerWord * 100) / 100,\n                    readabilityScore: avgWordsPerSentence < 15 && avgCharsPerWord < 5 ? 'Easy' :\n                        avgWordsPerSentence < 20 && avgCharsPerWord < 6 ? 'Medium' : 'Hard'\n                };\n            case 'structure':\n                return {\n                    paragraphs: text.split(/\\n\\s*\\n/).length,\n                    lines: text.split('\\n').length,\n                    characters: text.length,\n                    charactersNoSpaces: text.replace(/\\s/g, '').length\n                };\n            default:\n                throw new Error(`Unknown analysis type: ${type}`);\n        }\n    }\n    async createSummary(content, focus = 'key_points', length = 'medium') {\n        // Simple summarization implementation\n        const sentences = content.split(/[.!?]+/).filter(s => s.trim().length > 0);\n        const maxSentences = length === 'brief' ? 2 : length === 'medium' ? 5 : 10;\n        // Simple sentence scoring based on word frequency\n        const words = content.toLowerCase().replace(/[^\\w\\s]/g, '').split(/\\s+/);\n        const wordFreq = {};\n        words.forEach(word => {\n            if (word.length > 3) {\n                wordFreq[word] = (wordFreq[word] || 0) + 1;\n            }\n        });\n        const scoredSentences = sentences.map(sentence => {\n            const sentenceWords = sentence.toLowerCase().replace(/[^\\w\\s]/g, '').split(/\\s+/);\n            const score = sentenceWords.reduce((sum, word) => sum + (wordFreq[word] || 0), 0) / sentenceWords.length;\n            return { sentence: sentence.trim(), score };\n        });\n        const topSentences = scoredSentences\n            .sort((a, b) => b.score - a.score)\n            .slice(0, Math.min(maxSentences, sentences.length))\n            .sort((a, b) => sentences.indexOf(a.sentence) - sentences.indexOf(b.sentence));\n        return {\n            summary: topSentences.map(s => s.sentence).join('. ') + '.',\n            originalLength: content.length,\n            summaryLength: topSentences.map(s => s.sentence).join('. ').length,\n            compressionRatio: Math.round((1 - topSentences.map(s => s.sentence).join('. ').length / content.length) * 100),\n            focus\n        };\n    }\n    async createTaskPlan(task, context) {\n        // Simple task planning implementation\n        const steps = [\n            'Analyze the task requirements',\n            'Gather necessary resources and information',\n            'Break down into smaller sub-tasks',\n            'Execute each sub-task in sequence',\n            'Review and validate results',\n            'Document the process and outcomes'\n        ];\n        return {\n            task,\n            context: context || 'No additional context provided',\n            estimatedSteps: steps.length,\n            steps: steps.map((step, index) => ({\n                id: index + 1,\n                description: step,\n                status: 'pending',\n                estimatedTime: '15-30 minutes'\n            })),\n            totalEstimatedTime: '1.5-3 hours',\n            priority: 'medium',\n            complexity: task.length > 100 ? 'high' : task.length > 50 ? 'medium' : 'low'\n        };\n    }\n    detectToolRequests(content) {\n        const toolCalls = [];\n        // Pattern 1: [TOOL]{...}[/TOOL]\n        const toolRegex = /\\[TOOL\\]({.*?})\\[\\/TOOL\\]/gs;\n        let match;\n        while ((match = toolRegex.exec(content)) !== null) {\n            try {\n                const toolCall = JSON.parse(match[1]);\n                if (toolCall.name && toolCall.parameters) {\n                    toolCalls.push(toolCall);\n                }\n            }\n            catch (error) {\n                console.warn('Failed to parse tool call:', match[1]);\n            }\n        }\n        // Pattern 2: Use [tool_name] tool with [query]\n        const availableTools = Array.from(this.tools.keys());\n        for (const toolName of availableTools) {\n            const usePattern = new RegExp(`use ${toolName} tool with\\\\s+(.+?)(?=\\\\.|$)`, 'gi');\n            const useMatch = usePattern.exec(content);\n            if (useMatch) {\n                toolCalls.push({\n                    name: toolName,\n                    parameters: { query: useMatch[1].trim() }\n                });\n            }\n            // Pattern 3: /tool_name [query]\n            const slashPattern = new RegExp(`\\\\/${toolName}\\\\s+(.+?)(?=\\\\.|$)`, 'gi');\n            const slashMatch = slashPattern.exec(content);\n            if (slashMatch) {\n                toolCalls.push({\n                    name: toolName,\n                    parameters: { query: slashMatch[1].trim() }\n                });\n            }\n        }\n        return toolCalls;\n    }\n    async processToolChain(toolCalls) {\n        const results = [];\n        for (const toolCall of toolCalls) {\n            const result = await this.processToolCall(toolCall);\n            results.push(result);\n        }\n        return results;\n    }\n}\n// Create and export a default instance\nconst lmStudioApi = new LMStudioAPI();\nexport default lmStudioApi;\n","const ollama = {\n    generateCompletion: async (prompt, model = \"gemma3:4b\") => {\n        var _a;\n        const response = await fetch('http://localhost:11434/api/generate', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ model, prompt })\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(`Ollama generateCompletion error: ${response.status} ${response.statusText} - ${errorText}`);\n            throw new Error(`Ollama API error: ${response.status} ${response.statusText}`);\n        }\n        const reader = (_a = response.body) === null || _a === void 0 ? void 0 : _a.getReader();\n        if (!reader) {\n            throw new Error(\"Failed to get reader from response body.\");\n        }\n        const decoder = new TextDecoder();\n        let result = '';\n        let lastResponse = null;\n        while (true) {\n            const { done, value } = await reader.read();\n            if (done)\n                break;\n            const chunk = decoder.decode(value, { stream: true });\n            result += chunk;\n            // Process each line as a separate JSON object\n            const lines = result.split('\\n');\n            result = lines.pop() || ''; // Keep the last (possibly incomplete) line\n            for (const line of lines) {\n                if (line.trim() === '')\n                    continue;\n                try {\n                    const json = JSON.parse(line);\n                    lastResponse = json; // Keep track of the last successful parse\n                }\n                catch (e) {\n                    console.warn(\"Failed to parse JSON line:\", line, e);\n                }\n            }\n        }\n        return lastResponse; // Return the last successfully parsed JSON object\n    },\n    // Add test connection function\n    testConnection: async () => {\n        try {\n            const response = await fetch('http://localhost:11434/api/version', {\n                method: 'GET'\n            });\n            return response.status === 200;\n        }\n        catch (error) {\n            console.warn(\"Ollama server not available:\", error);\n            return false;\n        }\n    }\n};\nexport default ollama;\n","import ollama from \"./ollamaApi\";\nclass OllamaService {\n    async generateResponse(prompt, options = {}) {\n        const { model = \"llama3\", temperature = 0.7 } = options;\n        try {\n            return await ollama.generateCompletion(prompt, model);\n        }\n        catch (error) {\n            console.error(\"Ollama generation error:\", error);\n            throw error;\n        }\n    }\n    async testConnection() {\n        return await ollama.testConnection();\n    }\n}\nconst ollamaService = new OllamaService();\nexport default ollamaService;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Typography, CircularProgress, IconButton, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert, Chip, Card, CardContent, Grid } from '@mui/material';\nimport { analyzeContent } from '../utils/contentAnalysis';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport LanguageIcon from '@mui/icons-material/Language';\nimport VideoLibraryIcon from '@mui/icons-material/VideoLibrary';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport ReactMarkdown from 'react-markdown';\nimport lmStudioApi from '../api/lmStudioApi';\nimport ollamaService from '../api/ollamaService';\nconst Chat = ({ initialMode = 'general' }) => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [mode, setMode] = useState(initialMode);\n    const [contentData, setContentData] = useState(null);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState('info');\n    const [thinkingSteps, setThinkingSteps] = useState([]);\n    const [apiUrlState, setApiUrlState] = useState('');\n    const [modelNameState, setModelNameState] = useState('');\n    const messagesEndRef = useRef(null);\n    const fileInputRef = useRef(null);\n    // Update LMStudio API settings from storage on mount\n    useEffect(() => {\n        chrome.storage.sync.get(['lmStudioApiUrl', 'lmStudioModelName'], (result) => {\n            if (result.lmStudioApiUrl) {\n                lmStudioApi.setBaseUrl(result.lmStudioApiUrl);\n                setApiUrlState(result.lmStudioApiUrl);\n            }\n            if (result.lmStudioModelName) {\n                lmStudioApi.setDefaultModel(result.lmStudioModelName);\n                setModelNameState(result.lmStudioModelName);\n            }\n        });\n    }, []);\n    // Initialize chat with system message\n    useEffect(() => {\n        const systemMessage = {\n            role: 'system',\n            content: lmStudioApi.getSystemPrompt(mode)\n        };\n        setMessages([systemMessage]);\n        // Clear content data when mode changes\n        if (contentData && ((mode === 'pdf' && contentData.type !== 'pdf') ||\n            (mode === 'web' && contentData.type !== 'web') ||\n            (mode === 'video' && contentData.type !== 'video'))) {\n            setContentData(null);\n        }\n    }, [mode]);\n    const scrollToBottom = () => {\n        var _a;\n        (_a = messagesEndRef.current) === null || _a === void 0 ? void 0 : _a.scrollIntoView({ behavior: 'smooth' });\n    };\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n    const generateThinkingSteps = async (userInput) => {\n        const steps = [\n            { id: 1, content: \"Processing your request...\" },\n            { id: 2, content: \"Analyzing context and previous messages...\" },\n            { id: 3, content: \"Formulating response...\" }\n        ];\n        for (const step of steps) {\n            setThinkingSteps(prev => [...prev, step]);\n            await new Promise(resolve => setTimeout(resolve, 700)); // Delay between steps\n        }\n    };\n    const handleSend = async () => {\n        if (input.trim() === '')\n            return;\n        let userContent = input;\n        // Reset thinking steps\n        setThinkingSteps([]);\n        // If we have content data, include it in the message\n        if (contentData) {\n            if (mode === 'pdf' && contentData.type === 'pdf') {\n                userContent = `[Regarding PDF: ${contentData.title}]\\n\\n${input}\\n\\nPDF Content:\\n${contentData.content.substring(0, 8000)}`;\n            }\n            else if (mode === 'web' && contentData.type === 'web') {\n                userContent = `[Regarding webpage: ${contentData.title}]\\n\\n${input}\\n\\nWebpage Content:\\n${contentData.content.substring(0, 8000)}`;\n            }\n            else if (mode === 'video' && contentData.type === 'video') {\n                userContent = `[Regarding video: ${contentData.title}]\\n\\n${input}\\n\\nVideo Information:\\n${contentData.content}`;\n            }\n        }\n        const userMessage = {\n            role: 'user',\n            content: userContent\n        };\n        // Update messages with user input (but only show the original input to the user)\n        const displayUserMessage = {\n            role: 'user',\n            content: input\n        };\n        const updatedMessages = [...messages, userMessage];\n        const displayMessages = [...messages.filter(msg => msg.role !== 'system'), displayUserMessage];\n        setMessages(updatedMessages);\n        setInput('');\n        setIsLoading(true);\n        // Start thinking animation\n        generateThinkingSteps(input);\n        try {\n            // Check settings to determine which API to use\n            const result = await chrome.storage.sync.get('useOllama');\n            const useOllama = result.useOllama;\n            console.log(\"useOllama setting:\", useOllama);\n            let response;\n            if (useOllama) {\n                console.log(\"Using Ollama service...\");\n                response = await ollamaService.generateResponse(userContent);\n            }\n            else {\n                console.log(\"Using LM Studio service...\");\n                response = await lmStudioApi.chatCompletion(updatedMessages);\n            }\n            // Clear thinking steps\n            setThinkingSteps([]);\n            // Add AI response to messages\n            const assistantMessage = {\n                role: 'assistant',\n                content: response.response || JSON.stringify(response) // Adjust based on actual Ollama response structure\n            };\n            setMessages([...updatedMessages, assistantMessage]);\n        }\n        catch (error) {\n            console.error('Error getting response:', error);\n            // Clear thinking steps\n            setThinkingSteps([]);\n            // Add error message\n            const errorMessage = {\n                role: 'assistant',\n                content: 'Sorry, I encountered an error. Please check your Ollama/LM Studio server connection and try again.'\n            };\n            setMessages([...updatedMessages, errorMessage]);\n        }\n        finally {\n            setIsLoading(false);\n        }\n    };\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSend();\n        }\n    };\n    const handleClearChat = () => {\n        const systemMessage = {\n            role: 'system',\n            content: lmStudioApi.getSystemPrompt(mode)\n        };\n        setMessages([systemMessage]);\n        setContentData(null);\n    };\n    const handleFileUpload = (event) => {\n        var _a;\n        const file = (_a = event.target.files) === null || _a === void 0 ? void 0 : _a[0];\n        if (!file)\n            return;\n        // Check if we're in PDF mode\n        if (mode !== 'pdf') {\n            showSnackbar('Please switch to PDF Analyzer mode to analyze PDF files', 'error');\n            return;\n        }\n        // Check if it's a PDF file\n        if (file.type !== 'application/pdf') {\n            showSnackbar('Please upload a PDF file', 'error');\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n            try {\n                // In a real implementation, we would use PDF.js or similar to extract text\n                // For now, we'll just use a placeholder\n                setContentData({\n                    type: 'pdf',\n                    title: file.name,\n                    content: `[PDF content from ${file.name}]\\n\\nThis is a placeholder for the PDF content. In a real implementation, we would extract the text from the PDF file.`\n                });\n                showSnackbar(`PDF uploaded: ${file.name}`, 'success');\n            }\n            catch (error) {\n                console.error('Error processing PDF:', error);\n                showSnackbar('Error processing PDF file', 'error');\n            }\n        };\n        reader.readAsArrayBuffer(file);\n    };\n    const extractWebContent = async () => {\n        if (mode !== 'web') {\n            showSnackbar('Please switch to Web Analyzer mode to analyze web pages', 'error');\n            return;\n        }\n        try {\n            chrome.runtime.sendMessage({ action: 'extractPageContent' }, (response) => {\n                if (chrome.runtime.lastError) {\n                    console.error('Error:', chrome.runtime.lastError);\n                    showSnackbar('Error extracting web content', 'error');\n                    return;\n                }\n                if (response && response.content) {\n                    const analysis = analyzeContent(response.content);\n                    setContentData({\n                        type: 'web',\n                        title: response.content.title,\n                        content: response.content.mainContent,\n                        url: response.content.url,\n                        analysis\n                    });\n                    showSnackbar('Page analyzed successfully', 'success');\n                }\n                else if (response && response.error) {\n                    showSnackbar(response.error, 'error');\n                }\n                else {\n                    showSnackbar('No content found on this page', 'error');\n                }\n            });\n        }\n        catch (error) {\n            console.error('Error extracting web content:', error);\n            showSnackbar('Error extracting web content', 'error');\n        }\n    };\n    const extractVideoInfo = async () => {\n        if (mode !== 'video') {\n            showSnackbar('Please switch to Video Summarizer mode to analyze videos', 'error');\n            return;\n        }\n        try {\n            // Send message to content script to extract video info\n            chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n                if (!tabs[0].id) {\n                    showSnackbar('No active tab found', 'error');\n                    return;\n                }\n                chrome.tabs.sendMessage(tabs[0].id, { action: 'extractVideoInfo' }, (response) => {\n                    if (chrome.runtime.lastError) {\n                        console.error('Error:', chrome.runtime.lastError);\n                        showSnackbar('Error extracting video information', 'error');\n                        return;\n                    }\n                    if (response && response.info) {\n                        const { platform, title, channel, description, duration, url } = response.info;\n                        // Format the content\n                        const formattedContent = `Platform: ${platform}\\nTitle: ${title}\\nChannel: ${channel || 'Unknown'}\\nDuration: ${duration || 'Unknown'}\\nURL: ${url}\\n\\nDescription:\\n${description || 'No description available'}`;\n                        setContentData({\n                            type: 'video',\n                            title: title,\n                            content: formattedContent,\n                            url: url\n                        });\n                        showSnackbar(`Video information extracted: ${title}`, 'success');\n                    }\n                    else {\n                        showSnackbar('No video found on this page', 'error');\n                    }\n                });\n            });\n        }\n        catch (error) {\n            console.error('Error extracting video info:', error);\n            showSnackbar('Error extracting video information', 'error');\n        }\n    };\n    const showSnackbar = (message, severity) => {\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setSnackbarOpen(true);\n    };\n    const handleSnackbarClose = () => {\n        setSnackbarOpen(false);\n    };\n    const handleModeChange = (event) => {\n        setMode(event.target.value);\n    };\n    const renderWebAnalysis = (analysis) => (_jsx(Box, { sx: { mt: 2 }, children: _jsxs(Grid, { container: true, spacing: 2, children: [_jsx(Grid, { item: true, xs: 12, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Content Overview\" }), _jsx(Typography, { variant: \"body2\", color: \"text.secondary\", paragraph: true, children: analysis.summary }), _jsxs(Box, { sx: { display: 'flex', gap: 1, mb: 2, flexWrap: 'wrap' }, children: [_jsx(Chip, { label: `Type: ${analysis.context.type}`, size: \"small\", color: \"primary\", variant: \"outlined\" }), _jsx(Chip, { label: `Audience: ${analysis.context.audience}`, size: \"small\", color: \"primary\", variant: \"outlined\" }), _jsx(Chip, { label: `Level: ${analysis.context.complexity}`, size: \"small\", color: \"primary\", variant: \"outlined\" })] })] }) }) }), analysis.mainPoints.length > 0 && (_jsx(Grid, { item: true, xs: 12, md: 6, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            height: '100%',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Main Points\" }), _jsx(Box, { component: \"ul\", sx: { pl: 2, m: 0 }, children: analysis.mainPoints.map((point, index) => (_jsx(Box, { component: \"li\", sx: { mb: 1 }, children: _jsx(Typography, { variant: \"body2\", children: point }) }, index))) })] }) }) })), analysis.learningObjectives && (_jsx(Grid, { item: true, xs: 12, md: 6, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            height: '100%',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Learning Objectives\" }), _jsx(Box, { component: \"ul\", sx: { pl: 2, m: 0 }, children: analysis.learningObjectives.map((objective, index) => (_jsx(Box, { component: \"li\", sx: { mb: 1 }, children: _jsx(Typography, { variant: \"body2\", children: objective }) }, index))) })] }) }) })), analysis.keyTerms && (_jsx(Grid, { item: true, xs: 12, md: 6, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            height: '100%',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Key Terms\" }), _jsx(Box, { sx: { display: 'flex', gap: 1, flexWrap: 'wrap' }, children: analysis.keyTerms.map((term, index) => (_jsx(Chip, { label: term, size: \"small\", variant: \"outlined\", sx: {\n                                            borderColor: 'rgba(255,255,255,0.2)',\n                                            '&:hover': {\n                                                borderColor: 'primary.main',\n                                                backgroundColor: 'rgba(82, 113, 255, 0.1)'\n                                            }\n                                        } }, index))) })] }) }) })), analysis.equations && (_jsx(Grid, { item: true, xs: 12, md: 6, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            height: '100%',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Key Equations\" }), _jsx(Box, { sx: {\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        gap: 1\n                                    }, children: analysis.equations.map((equation, index) => (_jsx(Card, { sx: {\n                                            backgroundColor: 'rgba(0,0,0,0.2)',\n                                            p: 1,\n                                            borderRadius: 2\n                                        }, children: _jsx(Typography, { variant: \"body2\", sx: { fontFamily: 'monospace' }, children: equation }) }, index))) })] }) }) })), analysis.intuition && (_jsx(Grid, { item: true, xs: 12, children: _jsx(Card, { sx: {\n                            backgroundColor: 'rgba(255,255,255,0.03)',\n                            borderRadius: 3,\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }, children: _jsxs(CardContent, { children: [_jsx(Typography, { variant: \"h6\", gutterBottom: true, children: \"Intuitive Understanding\" }), _jsx(Typography, { variant: \"body2\", color: \"text.secondary\", children: analysis.intuition })] }) }) }))] }) }));\n    return (_jsxs(Box, { sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            position: 'relative',\n            backgroundColor: 'background.default'\n        }, children: [_jsxs(Box, { sx: {\n                    px: { xs: 2, sm: 3 },\n                    py: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 2\n                }, children: [_jsxs(Box, { sx: {\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            width: '100%'\n                        }, children: [_jsxs(FormControl, { size: \"small\", sx: {\n                                    minWidth: '220px',\n                                    flexGrow: 1,\n                                    maxWidth: '400px',\n                                    '& .MuiOutlinedInput-root': {\n                                        borderRadius: '12px',\n                                        backgroundColor: 'background.paper',\n                                        transition: 'all 0.2s ease',\n                                        '&:hover': {\n                                            boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\n                                        }\n                                    }\n                                }, children: [_jsx(InputLabel, { children: \"Mode\" }), _jsxs(Select, { value: mode, label: \"Mode\", onChange: handleModeChange, children: [_jsx(MenuItem, { value: \"general\", children: \"General Assistant\" }), _jsx(MenuItem, { value: \"writing\", children: \"Writing Assistant\" }), _jsx(MenuItem, { value: \"research\", children: \"Research Assistant\" }), _jsx(MenuItem, { value: \"coding\", children: \"Coding Assistant\" }), _jsx(MenuItem, { value: \"pdf\", children: \"PDF Analyzer\" }), _jsx(MenuItem, { value: \"web\", children: \"Web Analyzer\" })] })] }), _jsx(Box, { children: _jsx(IconButton, { onClick: handleClearChat, color: \"secondary\", sx: {\n                                        backgroundColor: 'rgba(0,0,0,0.04)',\n                                        borderRadius: '50%',\n                                        '&:hover': {\n                                            backgroundColor: 'rgba(0,0,0,0.08)'\n                                        }\n                                    }, children: _jsx(DeleteIcon, { fontSize: \"small\" }) }) })] }), (mode === 'pdf' || mode === 'web' || mode === 'video') && (_jsxs(Box, { sx: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            flexWrap: 'wrap',\n                            gap: 1\n                        }, children: [mode === 'pdf' && (_jsxs(_Fragment, { children: [_jsx(Box, { component: \"input\", type: \"file\", accept: \"application/pdf\", ref: fileInputRef, onChange: handleFileUpload, \"aria-label\": \"Upload PDF file\", title: \"Upload PDF file for analysis\", sx: { display: 'none' } }), _jsx(Button, { variant: \"outlined\", startIcon: _jsx(UploadFileIcon, {}), onClick: () => { var _a; return (_a = fileInputRef.current) === null || _a === void 0 ? void 0 : _a.click(); }, size: \"small\", sx: {\n                                            borderRadius: '8px',\n                                            textTransform: 'none',\n                                            fontSize: '0.8rem',\n                                            py: 0.5,\n                                            borderColor: 'rgba(82, 113, 255, 0.5)',\n                                            color: 'primary.main',\n                                            '&:hover': {\n                                                borderColor: 'primary.main',\n                                                backgroundColor: 'rgba(82, 113, 255, 0.04)'\n                                            }\n                                        }, children: \"Upload PDF\" })] })), mode === 'web' && (_jsx(Button, { variant: \"outlined\", startIcon: _jsx(LanguageIcon, {}), onClick: extractWebContent, size: \"small\", sx: {\n                                    borderRadius: '8px',\n                                    textTransform: 'none',\n                                    fontSize: '0.8rem',\n                                    py: 0.5,\n                                    borderColor: 'rgba(82, 113, 255, 0.5)',\n                                    color: 'primary.main',\n                                    '&:hover': {\n                                        borderColor: 'primary.main',\n                                        backgroundColor: 'rgba(82, 113, 255, 0.04)'\n                                    }\n                                }, children: \"Analyze Current Page\" })), mode === 'video' && (_jsx(Button, { variant: \"outlined\", startIcon: _jsx(VideoLibraryIcon, {}), onClick: extractVideoInfo, size: \"small\", sx: {\n                                    borderRadius: '8px',\n                                    textTransform: 'none',\n                                    fontSize: '0.8rem',\n                                    py: 0.5,\n                                    borderColor: 'rgba(82, 113, 255, 0.5)',\n                                    color: 'primary.main',\n                                    '&:hover': {\n                                        borderColor: 'primary.main',\n                                        backgroundColor: 'rgba(82, 113, 255, 0.04)'\n                                    }\n                                }, children: \"Analyze Current Video\" })), contentData && (_jsx(Chip, { label: contentData.title, size: \"small\", color: \"primary\", variant: \"outlined\", onDelete: () => setContentData(null), sx: {\n                                    borderRadius: '8px',\n                                    height: '28px',\n                                    fontSize: '0.75rem',\n                                    '& .MuiChip-deleteIcon': {\n                                        fontSize: '0.9rem'\n                                    }\n                                } }))] })), _jsxs(Box, { sx: { pl: 2, pt: 1 }, children: [_jsxs(Typography, { variant: \"caption\", color: \"text.secondary\", children: [\"Model: \", modelNameState || lmStudioApi.getDefaultModel()] }), _jsx(\"br\", {}), _jsxs(Typography, { variant: \"caption\", color: \"text.secondary\", children: [\"API URL: \", apiUrlState || lmStudioApi.getBaseUrl()] })] })] }), _jsxs(Box, { sx: {\n                    flexGrow: 1,\n                    overflow: 'auto',\n                    px: { xs: 2, sm: 3 },\n                    pb: 2,\n                    scrollBehavior: 'smooth',\n                    '&::-webkit-scrollbar': {\n                        width: '8px',\n                    },\n                    '&::-webkit-scrollbar-track': {\n                        backgroundColor: 'transparent'\n                    },\n                    '&::-webkit-scrollbar-thumb': {\n                        backgroundColor: 'rgba(255,255,255,0.2)',\n                        borderRadius: '4px',\n                    },\n                    '&::-webkit-scrollbar-thumb:hover': {\n                        backgroundColor: 'rgba(255,255,255,0.3)',\n                    }\n                }, children: [messages.filter(msg => msg.role !== 'system').map((msg, index) => (_jsxs(Box, { sx: {\n                            mb: 3,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: msg.role === 'user' ? 'flex-end' : 'flex-start',\n                            maxWidth: '100%',\n                        }, children: [_jsx(Box, { sx: {\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    mb: 0.5,\n                                    ml: msg.role === 'user' ? 'auto' : 1,\n                                    mr: msg.role === 'user' ? 1 : 'auto',\n                                }, children: _jsx(Typography, { variant: \"caption\", color: \"text.secondary\", fontWeight: 500, children: msg.role === 'user' ? 'You' : 'CLAIRE' }) }), _jsx(Box, { sx: {\n                                    p: 2,\n                                    borderRadius: '16px',\n                                    backgroundColor: msg.role === 'user' ? 'rgba(82, 113, 255, 0.15)' : 'rgba(255,255,255,0.05)',\n                                    maxWidth: '85%',\n                                    ml: msg.role === 'user' ? 'auto' : 0,\n                                    mr: msg.role === 'user' ? 0 : 'auto',\n                                    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n                                    border: msg.role === 'user' ? '1px solid rgba(82, 113, 255, 0.3)' : '1px solid rgba(255,255,255,0.1)',\n                                }, children: _jsx(Box, { sx: {\n                                        color: 'text.primary',\n                                        '& p': {\n                                            m: 0,\n                                            lineHeight: 1.6,\n                                        },\n                                        '& pre': {\n                                            backgroundColor: 'rgba(0,0,0,0.3)',\n                                            p: 1.5,\n                                            borderRadius: 1.5,\n                                            overflowX: 'auto',\n                                            my: 1.5,\n                                            fontSize: '0.875rem',\n                                            fontFamily: '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n                                        },\n                                        '& code': {\n                                            backgroundColor: 'rgba(0,0,0,0.04)',\n                                            p: '2px 4px',\n                                            borderRadius: '4px',\n                                            fontSize: '0.875rem',\n                                            fontFamily: '\"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n                                        },\n                                        '& ul, & ol': {\n                                            pl: 2.5,\n                                            mb: 1.5,\n                                        },\n                                        '& li': {\n                                            mb: 0.5,\n                                        }\n                                    }, children: _jsx(ReactMarkdown, { children: msg.content }) }) })] }, index))), isLoading && (_jsx(Box, { sx: { display: 'flex', justifyContent: 'flex-start', my: 2, ml: 2 }, children: _jsxs(Box, { sx: {\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: 1.5,\n                                p: 2,\n                                borderRadius: '16px',\n                                backgroundColor: 'background.paper',\n                                boxShadow: '0 2px 6px rgba(0,0,0,0.04)',\n                                border: '1px solid rgba(0,0,0,0.04)',\n                                minWidth: '200px'\n                            }, children: [_jsxs(Box, { sx: { display: 'flex', alignItems: 'center', gap: 1.5 }, children: [_jsx(CircularProgress, { size: 16, thickness: 6, sx: { color: 'primary.main' } }), _jsx(Typography, { variant: \"body2\", color: \"text.secondary\", children: \"Thinking...\" })] }), thinkingSteps.map((step) => (_jsx(Box, { sx: {\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 1.5,\n                                        pl: 3.5,\n                                        opacity: 0.8\n                                    }, children: _jsx(Typography, { variant: \"caption\", color: \"text.secondary\", sx: {\n                                            fontSize: '0.75rem',\n                                            animation: 'fadeIn 0.3s ease-in'\n                                        }, children: step.content }) }, step.id)))] }) })), _jsx(\"div\", { ref: messagesEndRef })] }), _jsx(Box, { sx: {\n                    p: { xs: 2, sm: 3 },\n                    pt: 2,\n                    borderTop: '1px solid rgba(255,255,255,0.08)',\n                    backgroundColor: 'background.default'\n                }, children: _jsxs(Box, { sx: { position: 'relative', width: '100%' }, children: [_jsx(TextField, { fullWidth: true, variant: \"outlined\", placeholder: `Message CLAIRE${contentData ? ` about this ${contentData.type}...` : '...'}`, value: input, onChange: (e) => setInput(e.target.value), onKeyPress: handleKeyPress, multiline: true, maxRows: 4, disabled: isLoading, sx: {\n                                '& .MuiOutlinedInput-root': {\n                                    borderRadius: '12px',\n                                    backgroundColor: 'background.paper',\n                                    pl: 2,\n                                    pr: 6,\n                                    py: 1.5,\n                                    boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n                                    border: '1px solid rgba(255,255,255,0.1)',\n                                    '&.Mui-focused': {\n                                        borderColor: 'primary.main',\n                                        boxShadow: '0 0 0 2px rgba(82, 113, 255, 0.2)'\n                                    },\n                                    '&:hover': {\n                                        borderColor: 'rgba(255,255,255,0.2)'\n                                    }\n                                },\n                                '& .MuiInputBase-input': {\n                                    fontSize: '0.95rem',\n                                    color: 'text.primary'\n                                }\n                            } }), _jsx(Box, { sx: {\n                                position: 'absolute',\n                                right: '8px',\n                                top: '50%',\n                                transform: 'translateY(-50%)',\n                                zIndex: 1\n                            }, children: _jsx(IconButton, { color: \"primary\", onClick: handleSend, disabled: isLoading || input.trim() === '', sx: {\n                                    width: '36px',\n                                    height: '36px',\n                                    backgroundColor: input.trim() !== '' ? 'primary.main' : 'rgba(82, 113, 255, 0.2)',\n                                    color: 'white',\n                                    transition: 'all 0.2s ease',\n                                    '&:hover': {\n                                        backgroundColor: input.trim() !== '' ? 'primary.dark' : 'rgba(82, 113, 255, 0.2)',\n                                        transform: input.trim() !== '' ? 'translateY(-2px)' : 'none',\n                                    },\n                                    '&.Mui-disabled': {\n                                        backgroundColor: 'rgba(255,255,255,0.1)',\n                                        color: 'rgba(255,255,255,0.3)'\n                                    }\n                                }, children: isLoading ? _jsx(CircularProgress, { size: 20, color: \"inherit\" }) : _jsx(ArrowUpwardIcon, { fontSize: \"small\" }) }) })] }) }), _jsx(Snackbar, { open: snackbarOpen, autoHideDuration: 6000, onClose: handleSnackbarClose, children: _jsx(Alert, { onClose: handleSnackbarClose, severity: snackbarSeverity, sx: { width: '100%' }, children: snackbarMessage }) })] }));\n};\nexport default Chat;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { CssBaseline, ThemeProvider, createTheme, Box, AppBar, Toolbar, Typography, IconButton, List, ListItem, ListItemIcon, ListItemText, TextField, Button, Paper, } from \"@mui/material\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport LanguageIcon from \"@mui/icons-material/Language\";\nimport VideoLibraryIcon from \"@mui/icons-material/VideoLibrary\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { FormControlLabel, Switch } from \"@mui/material\";\nimport Chat from \"./components/Chat\";\n// Create theme\nconst theme = createTheme({\n    palette: {\n        mode: \"dark\",\n        primary: {\n            main: \"#5271ff\", // CLAIRE blue\n            light: \"#5ce1e6\",\n            dark: \"#004aad\",\n            contrastText: \"#ffffff\",\n        },\n        secondary: {\n            main: \"#6e6e80\", // Gray\n            light: \"#9e9eae\",\n            dark: \"#4a4a5a\",\n            contrastText: \"#ffffff\",\n        },\n        background: {\n            default: \"#202123\",\n            paper: \"#2d2d30\",\n        },\n        text: {\n            primary: \"#ffffff\",\n            secondary: \"#ececf1\",\n        },\n    },\n    typography: {\n        fontFamily: '\"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n        h6: {\n            fontWeight: 600,\n        },\n        subtitle1: {\n            fontWeight: 500,\n        },\n        button: {\n            fontWeight: 500,\n            textTransform: \"none\",\n        },\n    },\n    shape: {\n        borderRadius: 8,\n    },\n    components: {\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    borderRadius: 8,\n                    padding: \"10px 16px\",\n                    boxShadow: \"none\",\n                    \"&:hover\": {\n                        boxShadow: \"none\",\n                    },\n                },\n                contained: {\n                    \"&:hover\": {\n                        backgroundColor: \"#004aad\", // Updated to dark blue\n                    },\n                },\n            },\n        },\n        MuiTextField: {\n            styleOverrides: {\n                root: {\n                    \"& .MuiOutlinedInput-root\": {\n                        borderRadius: 8,\n                    },\n                },\n            },\n        },\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    borderRadius: 12,\n                    boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.08)\",\n                },\n            },\n        },\n        MuiAppBar: {\n            styleOverrides: {\n                root: {\n                    boxShadow: \"none\",\n                    borderBottom: \"1px solid rgba(0, 0, 0, 0.08)\",\n                },\n            },\n        },\n    },\n});\nconst Popup = () => {\n    const [activeMode, setActiveMode] = useState(\"general\");\n    const [showSettings, setShowSettings] = useState(false);\n    const [showModeMenu, setShowModeMenu] = useState(false);\n    const [apiUrl, setApiUrl] = useState(\"http://localhost:6223/v1\");\n    const [modelName, setModelName] = useState(\"google/gemma-3-4b\");\n    const [useOllama, setUseOllama] = useState(false);\n    const [ollamaModel, setOllamaModel] = useState(\"gemma3:4b\");\n    const modeMenuRef = useRef(null);\n    const handleModeSelect = (mode) => {\n        setActiveMode(mode);\n        setShowModeMenu(false);\n    };\n    const handleSettingsToggle = () => {\n        setShowSettings(!showSettings);\n    };\n    const toggleModeMenu = () => {\n        setShowModeMenu(!showModeMenu);\n    };\n    // Close mode menu when clicking outside\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (modeMenuRef.current &&\n                !modeMenuRef.current.contains(event.target)) {\n                setShowModeMenu(false);\n            }\n        }\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n    const handleSaveSettings = () => {\n        // Save settings to chrome.storage\n        chrome.storage.sync.set({\n            lmStudioApiUrl: apiUrl,\n            lmStudioModelName: modelName,\n            useOllama: useOllama,\n            ollamaModel: ollamaModel\n        }, () => {\n            console.log(\"Settings saved\");\n            setShowSettings(false);\n        });\n    };\n    // Load settings on component mount\n    React.useEffect(() => {\n        chrome.storage.sync.get([\"lmStudioApiUrl\", \"lmStudioModelName\", \"useOllama\", \"ollamaModel\"], (result) => {\n            if (result.lmStudioApiUrl) {\n                setApiUrl(result.lmStudioApiUrl);\n            }\n            if (result.lmStudioModelName) {\n                setModelName(result.lmStudioModelName);\n            }\n            if (result.useOllama !== undefined) {\n                setUseOllama(result.useOllama);\n            }\n            if (result.ollamaModel) {\n                setOllamaModel(result.ollamaModel);\n            }\n        });\n    }, []);\n    // Get icon based on active mode\n    const getModeIcon = (mode) => {\n        switch (mode) {\n            case \"pdf\":\n                return _jsx(DescriptionIcon, { fontSize: \"small\" });\n            case \"web\":\n                return _jsx(LanguageIcon, { fontSize: \"small\" });\n            case \"video\":\n                return _jsx(VideoLibraryIcon, { fontSize: \"small\" });\n            default:\n                return _jsx(ChatIcon, { fontSize: \"small\" });\n        }\n    };\n    // Get mode display name\n    const getModeDisplayName = (mode) => {\n        switch (mode) {\n            case \"general\":\n                return \"General Assistant\";\n            case \"writing\":\n                return \"Writing Assistant\";\n            case \"coding\":\n                return \"Coding Assistant\";\n            case \"pdf\":\n                return \"PDF Analyzer\";\n            case \"web\":\n                return \"Web Analyzer\";\n            default:\n                return \"Assistant\";\n        }\n    };\n    return (_jsxs(ThemeProvider, { theme: theme, children: [_jsx(CssBaseline, {}), _jsxs(Box, { sx: {\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    height: \"100vh\",\n                    minWidth: \"350px\",\n                    width: \"100%\",\n                    position: \"relative\",\n                    borderLeft: \"1px solid rgba(255,255,255,0.08)\",\n                }, children: [_jsx(AppBar, { position: \"static\", color: \"transparent\", elevation: 0, sx: {\n                            borderBottom: \"1px solid rgba(255,255,255,0.08)\",\n                            width: \"100%\",\n                        }, children: _jsxs(Toolbar, { sx: {\n                                minHeight: \"64px\",\n                                display: \"flex\",\n                                width: \"100%\",\n                                px: { xs: 2, sm: 3 },\n                            }, children: [_jsx(Box, { sx: {\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        flexGrow: 1,\n                                    }, children: _jsx(Typography, { variant: \"h6\", component: \"div\", sx: {\n                                            fontWeight: 600,\n                                            background: \" #5ce1e6\",\n                                            WebkitBackgroundClip: \"text\",\n                                            WebkitTextFillColor: \"transparent\",\n                                        }, children: \"CLAIRE\" }) }), _jsx(Box, { sx: { position: \"relative\" }, ref: modeMenuRef, children: showModeMenu && (_jsxs(Paper, { elevation: 3, sx: {\n                                            position: \"absolute\",\n                                            top: \"100%\",\n                                            right: 0,\n                                            mt: 1,\n                                            width: 220,\n                                            borderRadius: 2,\n                                            overflow: \"hidden\",\n                                            zIndex: 1300,\n                                            backgroundColor: \"background.paper\",\n                                            border: \"1px solid rgba(255,255,255,0.1)\",\n                                        }, children: [_jsxs(Box, { sx: { p: 1.5, pb: 0.5 }, children: [_jsx(Typography, { variant: \"caption\", sx: { color: \"text.secondary\", fontWeight: 600, px: 1 }, children: \"ASSISTANTS\" }), _jsxs(List, { dense: true, sx: { pt: 0.5 }, children: [_jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"general\"), selected: activeMode === \"general\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(ChatIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"General Assistant\" })] }), _jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"writing\"), selected: activeMode === \"writing\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(ChatIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"Writing Assistant\" })] }), _jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"coding\"), selected: activeMode === \"coding\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(ChatIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"Coding Assistant\" })] })] })] }), _jsxs(Box, { sx: { p: 1.5, pt: 0.5 }, children: [_jsx(Typography, { variant: \"caption\", sx: { color: \"text.secondary\", fontWeight: 600, px: 1 }, children: \"ANALYZERS\" }), _jsxs(List, { dense: true, sx: { pt: 0.5 }, children: [_jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"pdf\"), selected: activeMode === \"pdf\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(DescriptionIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"PDF Analyzer\" })] }), _jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"web\"), selected: activeMode === \"web\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(LanguageIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"Web Analyzer\" })] }), _jsxs(ListItem, { button: true, onClick: () => handleModeSelect(\"video\"), selected: activeMode === \"video\", sx: { borderRadius: 1, mb: 0.5 }, children: [_jsx(ListItemIcon, { sx: { minWidth: 36 }, children: _jsx(VideoLibraryIcon, { fontSize: \"small\" }) }), _jsx(ListItemText, { primary: \"Video Summarizer\" })] })] })] })] })) }), _jsx(IconButton, { onClick: () => window.close(), sx: {\n                                        ml: 1,\n                                        backgroundColor: \"rgba(255,255,255,0.05)\",\n                                        border: \"1px solid rgba(255,255,255,0.1)\",\n                                        \"&:hover\": {\n                                            backgroundColor: \"rgba(255,255,255,0.1)\",\n                                        },\n                                    }, children: _jsx(CloseIcon, { fontSize: \"small\" }) }), _jsx(IconButton, { color: \"secondary\", onClick: handleSettingsToggle, sx: {\n                                        ml: 1,\n                                        backgroundColor: \"rgba(255,255,255,0.05)\",\n                                        border: \"1px solid rgba(255,255,255,0.1)\",\n                                        \"&:hover\": {\n                                            backgroundColor: \"rgba(255,255,255,0.1)\",\n                                        },\n                                    }, children: _jsx(SettingsIcon, { fontSize: \"small\" }) })] }) }), showSettings ? (_jsxs(Box, { sx: { p: 3, flexGrow: 1, backgroundColor: \"background.default\" }, children: [_jsxs(Box, { sx: { display: \"flex\", alignItems: \"center\", mb: 3 }, children: [_jsx(Box, { sx: {\n                                            width: 40,\n                                            height: 40,\n                                            borderRadius: \"12px\",\n                                            backgroundColor: \"rgba(82, 113, 255, 0.15)\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            color: \"primary.main\",\n                                            mr: 2,\n                                        }, children: _jsx(SettingsIcon, {}) }), _jsx(Typography, { variant: \"h6\", fontWeight: 600, color: \"text.primary\", children: \"LM Studio API Settings\" })] }), _jsx(Typography, { variant: \"body2\", color: \"text.secondary\", sx: { mb: 3 }, children: \"Configure your connection to LM Studio API to enable AI capabilities.\" }), _jsxs(Paper, { elevation: 0, sx: {\n                                    p: 3,\n                                    borderRadius: 3,\n                                    mb: 3,\n                                    backgroundColor: \"rgba(255,255,255,0.05)\",\n                                    border: \"1px solid rgba(255,255,255,0.1)\",\n                                }, children: [_jsx(Typography, { variant: \"subtitle1\", fontWeight: 600, sx: { mb: 2 }, children: \"Connection Settings\" }), _jsx(TextField, { fullWidth: true, label: \"API URL\", variant: \"outlined\", value: apiUrl, onChange: (e) => setApiUrl(e.target.value), margin: \"normal\", helperText: \"The URL of your LM Studio API server\", sx: {\n                                            mb: 2,\n                                            \"& .MuiOutlinedInput-root\": {\n                                                borderRadius: \"12px\",\n                                            },\n                                        } }), _jsx(TextField, { fullWidth: true, label: \"Model Name\", variant: \"outlined\", value: modelName, onChange: (e) => setModelName(e.target.value), margin: \"normal\", helperText: \"The name of your local model in LM Studio\", sx: {\n                                            mb: 1,\n                                            \"& .MuiOutlinedInput-root\": {\n                                                borderRadius: \"12px\",\n                                            },\n                                        } }), _jsx(Box, { sx: { mt: 3, mb: 2 }, children: _jsx(FormControlLabel, { control: _jsx(Switch, { checked: useOllama, onChange: (e) => setUseOllama(e.target.checked) }), label: \"Use Ollama (instead of LM Studio)\" }) }), useOllama && (_jsx(TextField, { fullWidth: true, label: \"Ollama Model\", variant: \"outlined\", value: ollamaModel, onChange: (e) => setOllamaModel(e.target.value), margin: \"normal\", helperText: \"Model to use with Ollama (e.g., llama3, mistral, codellama)\", sx: {\n                                            mb: 1,\n                                            \"& .MuiOutlinedInput-root\": {\n                                                borderRadius: \"12px\",\n                                            },\n                                        } }))] }), _jsxs(Box, { sx: { display: \"flex\", justifyContent: \"flex-end\" }, children: [_jsx(Button, { variant: \"outlined\", onClick: () => setShowSettings(false), sx: {\n                                            mr: 2,\n                                            borderRadius: \"12px\",\n                                            px: 3,\n                                            py: 1.2,\n                                            borderColor: \"rgba(255,255,255,0.2)\",\n                                            color: \"text.primary\",\n                                            \"&:hover\": {\n                                                borderColor: \"rgba(255,255,255,0.3)\",\n                                                backgroundColor: \"rgba(255,255,255,0.05)\",\n                                            },\n                                        }, children: \"Cancel\" }), _jsx(Button, { variant: \"contained\", onClick: handleSaveSettings, sx: {\n                                            borderRadius: \"12px\",\n                                            px: 3,\n                                            py: 1.2,\n                                            boxShadow: \"0 4px 10px rgba(82, 113, 255, 0.2)\",\n                                            \"&:hover\": {\n                                                boxShadow: \"0 6px 15px rgba(82, 113, 255, 0.3)\",\n                                                transform: \"translateY(-2px)\",\n                                            },\n                                        }, children: \"Save Settings\" })] })] })) : (_jsx(Box, { sx: {\n                            flexGrow: 1,\n                            overflow: \"hidden\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                        }, children: _jsx(Chat, { initialMode: activeMode }) }))] })] }));\n};\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(_jsx(Popup, {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t887: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclaire_ai_assistant\"] = self[\"webpackChunkclaire_ai_assistant\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(5635)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","detectContentType","url","content","includes","toLowerCase","detectAudience","technicalCount","filter","term","length","scientificCount","detectComplexity","counts","advanced","intermediate","beginner","Object","entries","forEach","level","terms","extractLearningObjectives","objectives","lines","split","inObjectivesSection","line","lowerLine","trim","startsWith","push","substring","undefined","extractKeyTerms","inTermsSection","extractEquations","equations","matches","match","map","slice","generateIntuition","constructor","baseUrl","defaultModel","this","tools","Map","agenticState","initializeDefaultTools","setBaseUrl","replace","setDefaultModel","model","getDefaultModel","getBaseUrl","registerTool","name","description","parameters","type","required","handler","async","params","searchWikipedia","result","query","success","data","title","summary","Error","error","category","performTextAnalysis","text","createSummary","focus","createTaskPlan","task","context","tool","set","unregisterTool","delete","getAvailableTools","Array","from","values","processToolCall","toolCall","get","keys","join","JSON","stringify","chatCompletion","messages","temperature","maxTokens","lastMessage","toolCalls","detectToolRequests","results","processToolChain","role","axios","post","max_tokens","stream","headers","choices","message","testConnection","timeout","status","chatCompletionWithFallback","getProtocols","mode","general","directive","rationale","examples","constraints","writing","research","coding","pdf","web","getSystemPrompt","availableTools","toolInstructions","p","systemPrompts","executeAgenticTask","userInput","maxTurns","currentTask","taskSteps","completedSteps","currentTurn","finalResponse","response","getAgenticSystemPrompt","isTaskComplete","some","indicator","suggestTools","suggestions","input","toolKeywords","search_wikipedia","analyze_text","summarize_content","plan_task","toolName","keywords","keyword","positiveWords","negativeWords","words","positive","word","negative","sentiment","score","commonWords","reduce","acc","sort","a","b","count","sentences","s","wordsCount","avgWordsPerSentence","avgCharsPerWord","wordCount","sentenceCount","averageWordsPerSentence","Math","round","averageCharsPerWord","readabilityScore","paragraphs","characters","charactersNoSpaces","maxSentences","wordFreq","topSentences","sentence","sentenceWords","sum","min","indexOf","originalLength","summaryLength","compressionRatio","steps","estimatedSteps","step","index","id","estimatedTime","totalEstimatedTime","priority","complexity","toolRegex","exec","parse","useMatch","RegExp","slashMatch","generateCompletion","prompt","_a","fetch","method","body","ok","statusText","reader","getReader","decoder","TextDecoder","lastResponse","done","value","read","decode","pop","e","generateResponse","options","initialMode","setMessages","useState","setInput","isLoading","setIsLoading","setMode","contentData","setContentData","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","thinkingSteps","setThinkingSteps","apiUrlState","setApiUrlState","modelNameState","setModelNameState","messagesEndRef","useRef","fileInputRef","useEffect","chrome","storage","sync","lmStudioApiUrl","lmStudioModelName","systemMessage","current","scrollIntoView","behavior","handleSend","userContent","userMessage","displayUserMessage","updatedMessages","msg","prev","Promise","resolve","setTimeout","generateThinkingSteps","useOllama","assistantMessage","errorMessage","showSnackbar","severity","handleSnackbarClose","Box","sx","display","flexDirection","height","position","backgroundColor","children","px","xs","sm","py","gap","justifyContent","alignItems","width","FormControl","size","minWidth","flexGrow","maxWidth","borderRadius","transition","boxShadow","InputLabel","Select","label","onChange","event","target","MenuItem","IconButton","onClick","color","Delete","fontSize","flexWrap","component","accept","ref","file","files","FileReader","onload","readAsArrayBuffer","Button","variant","startIcon","UploadFile","click","textTransform","borderColor","Language","runtime","sendMessage","action","lastError","analysis","rawData","metaDescription","mainContent","headings","mainPoints","h","learningObjectives","keyTerms","intuition","audience","analyzeContent","VideoLibrary","tabs","active","currentWindow","info","platform","channel","duration","Chip","onDelete","pl","pt","Typography","overflow","pb","scrollBehavior","mb","ml","mr","fontWeight","border","m","lineHeight","overflowX","my","fontFamily","CircularProgress","thickness","opacity","animation","borderTop","TextField","fullWidth","placeholder","onKeyPress","key","shiftKey","preventDefault","multiline","maxRows","disabled","pr","right","top","transform","zIndex","ArrowUpward","A","Snackbar","open","autoHideDuration","onClose","Alert","theme","createTheme","palette","primary","main","light","dark","contrastText","secondary","background","default","paper","typography","h6","subtitle1","button","shape","components","MuiButton","styleOverrides","root","padding","contained","MuiTextField","MuiPaper","MuiAppBar","borderBottom","document","getElementById","render","activeMode","setActiveMode","showSettings","setShowSettings","showModeMenu","setShowModeMenu","apiUrl","setApiUrl","modelName","setModelName","setUseOllama","ollamaModel","setOllamaModel","modeMenuRef","handleModeSelect","handleClickOutside","contains","addEventListener","removeEventListener","ThemeProvider","CssBaseline","borderLeft","AppBar","elevation","Toolbar","minHeight","WebkitBackgroundClip","WebkitTextFillColor","Paper","mt","List","dense","ListItem","selected","ListItemIcon","Chat","ListItemText","Description","window","close","Close","Settings","margin","helperText","FormControlLabel","control","Switch","checked","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","O","chunkIds","fn","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","getPrototypeOf","obj","t","then","ns","create","def","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","all","promises","u","g","globalThis","Function","prop","prototype","hasOwnProperty","l","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","onerror","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","test","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}